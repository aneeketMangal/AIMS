CREATE DATABASE aims;

\c aims;

CREATE ROLE deanoffice
LOGIN
PASSWORD 'deanoffice';

CREATE ROLE faculty;
CREATE ROLE student;

CREATE ROLE tvkalyan
WITH IN GROUP faculty
LOGIN
PASSWORD 'tvkalyan';

CREATE ROLE bsodhi
WITH IN GROUP faculty
LOGIN
PASSWORD 'bsodhi';

CREATE ROLE puneet
WITH IN GROUP faculty
LOGIN
PASSWORD 'puneet';

CREATE ROLE _2019csb1124
WITH IN GROUP student
LOGIN
PASSWORD '2019csb1124';

CREATE ROLE _2019csb1125
WITH IN GROUP student
LOGIN
PASSWORD '2019csb1125';

CREATE ROLE _2019csb1071
WITH IN GROUP student
LOGIN
PASSWORD '2019csb1071';

CREATE TABLE Courses(
courseId char(5) NOT NULL PRIMARY KEY,
Title VARCHAR(50) NOT NULL,
L float8 NOT NULL,
T float8 NOT NULL,
P float8 NOT NULL,
S float8 NOT NULL,
C float8 NOT NULL
);

GRANT ALL
ON Courses
TO deanoffice;

GRANT SELECT 
ON Courses
TO faculty;

GRANT SELECT 
ON Courses
TO student;


CREATE TABLE prereq(
courseId char(5) NOT NULL,
prereq_Id char(5) NOT NULL,
PRIMARY KEY(courseId,prereq_Id),
FOREIGN KEY(courseId) REFERENCES courses(courseId),
FOREIGN KEY(prereq_Id) REFERENCES courses(courseId)
);

GRANT ALL
ON prereq
TO deanoffice;

GRANT SELECT 
ON prereq
TO faculty;

GRANT SELECT 
ON prereq
TO student;

CREATE TABLE students(
id char(11) NOT NULL,
name varchar(40) NOT NULL,
dept varchar(4) NOT NULL,
batch INTEGER NOT NULL,
PRIMARY KEY(id)
);

GRANT SELECT 
ON students
TO deanoffice,faculty;


CREATE TABLE instructor(
id INTEGER NOT NULL,
name varchar(40) NOT NULL,
dept varchar(4) NOT NULL,
PRIMARY KEY(id)
);

GRANT SELECT 
ON instructor
TO deanoffice;

CREATE TABLE timeslots(
slot_type INTEGER NOT NULL,
PRIMARY KEY(slot_type)
);


CREATE TABLE batch(
batch INTEGER NOT NULL,
dept varchar(4) NOT NULL,
PRIMARY KEY(batch,dept)
);


CREATE TABLE course_offering(
id SERIAL,
courseid char(5) NOT NULL,
year INTEGER NOT NULL,
semester INTEGER NOT NULL,
sectionid INTEGER NOT NULL,
insid INTEGER NOT NULL,
slot INTEGER NOT NULL,
classroom varchar(5),
CGPA float8,
PRIMARY KEY(id),
FOREIGN KEY(courseid) REFERENCES courses(courseid),
FOREIGN KEY(insid) REFERENCES instructor(id),
FOREIGN KEY(slot) REFERENCES timeslots(slot_type)
);




